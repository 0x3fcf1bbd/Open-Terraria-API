<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <Platforms>x64</Platforms>
    <Nullable>enable</Nullable>
		<DebugType>embedded</DebugType>
		<IncludeAllContentForSelfExtract>true</IncludeAllContentForSelfExtract>
  </PropertyGroup>
  <!-- <PropertyGroup Condition="'$(PublishSingleFile)' == 'true' Or '$(PublishReadyToRun)' == 'true'">
    <DefineConstants>USE_BIN_FOLDER</DefineConstants>
  </PropertyGroup> -->
  <ItemGroup>
    <AvaloniaXaml Remove="Properties\**" />
    <Compile Remove="Properties\**" />
    <EmbeddedResource Remove="Properties\**" />
    <None Remove="Properties\**" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="csharp\plugins\modules\otapi-runtime\HostGame.cs" />
    <Compile Remove="csharp\plugins\modules\otapi-runtime\HostGamePlugin.cs" />
    <Compile Remove="csharp\plugins\modules\otapi-runtime\ImGuiRenderer.cs" />
    <Compile Remove="csharp\plugins\scripts\cef-runtime.cs" />
    <Compile Remove="csharp\plugins\scripts\test-runtime.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="csharp\plugins\modules\otapi-runtime\HostGamePlugin.cs" />
    <None Include="csharp\plugins\modules\otapi-runtime\ImGuiRenderer.cs" />
    <None Include="csharp\plugins\modules\otapi-runtime\HostGame.cs" />
    <None Include="csharp\plugins\scripts\cef-runtime.cs" />
    <None Include="csharp\plugins\scripts\test-runtime.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Avalonia" Version="0.10.6" />
    <PackageReference Include="Avalonia.Desktop" Version="0.10.6" />
    <PackageReference Include="Avalonia.Diagnostics" Version="0.10.6" />
    <PackageReference Include="cef.redist.osx64" Version="91.1.6" />
    <PackageReference Include="cef.redist.x64" Version="91.1.6" />
    <PackageReference Include="CefGlue.Avalonia" Version="91.4472.9" />
    <PackageReference Include="CefGlue.Common" Version="91.4472.9" />
    <PackageReference Include="Material.Avalonia" Version="2.3.0" />
    <PackageReference Include="Projektanker.Icons.Avalonia.FontAwesome" Version="3.1.2" />
    <PackageReference Include="ReactiveUI" Version="14.3.1" />
    <PackageReference Include="System.Reactive.Linq" Version="5.0.0" />
    <PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" GeneratePathProperty="true" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\FNA\FNA.Core.csproj">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
    </ProjectReference>
    <ProjectReference Include="..\OTAPI.Common\OTAPI.Common.csproj" />
    <ProjectReference Include="..\OTAPI.Patcher\OTAPI.Patcher.csproj" />
  </ItemGroup>
	<!-- <ItemGroup>
		<Reference Include="OTAPI.Runtime" Condition="Exists('.\bin\x64\Debug\net6.0\OTAPI.Runtime.dll')">
			<HintPath>.\bin\x64\Debug\net6.0\OTAPI.Runtime.dll</HintPath>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
		</Reference>
	</ItemGroup> -->
  <ItemGroup>
    <PackageReference Include="ImGui.NET" Version="1.78.0" />
    <PackageReference Include="Microsoft.ClearScript.linux-x64" Version="7.2.0" />
    <PackageReference Include="Microsoft.ClearScript.V8.Native.osx-x64" Version="7.2.0" />
    <PackageReference Include="Microsoft.ClearScript.V8.Native.win-x64" Version="7.2.0" />
    <PackageReference Include="ModFramework" Version="1.0.26-alpha" />
    <PackageReference Include="ModFramework.Modules.ClearScript" Version="1.0.26-alpha" GeneratePathProperty="true" />
    <PackageReference Include="ModFramework.Modules.CSharp" Version="1.0.26-alpha" GeneratePathProperty="true" />
    <PackageReference Include="ModFramework.Modules.Lua" Version="1.0.26-alpha" GeneratePathProperty="true" />
    <PackageReference Include="MonoMod.RuntimeDetour.HookGen" Version="21.11.9.2" />
    <PackageReference Include="MonoMod" Version="21.11.9.2" />
    <PackageReference Include="SharpZipLib" Version="1.3.2" />
    <PackageReference Include="System.Collections.Specialized" Version="4.3.0" />
    <PackageReference Include="System.Drawing.Primitives" Version="4.3.0" />
  </ItemGroup>
  <Target Name="CleanAll" AfterTargets="Clean">
    <RemoveDir Directories="$(OUTDIR)" />
  </Target>
  <ItemGroup>
    <Refs Include="$(MSBuildProjectDirectory)\..\OTAPI.Scripts\*.refs" />
    <Patches Include="$(MSBuildProjectDirectory)\..\OTAPI.Scripts\Patches\**\*.cs" />
    <TopLevelScripts Include="$(MSBuildProjectDirectory)\..\OTAPI.Scripts\TopLevelScripts\**\*.cs" />
    <Shims Include="$(MSBuildProjectDirectory)\..\OTAPI.Scripts\Shims\**\*.cs" />
    <Modules Include="$(MSBuildProjectDirectory)\..\OTAPI.Scripts\Modules\**\*" />
    <JavaScript Include="$(MSBuildProjectDirectory)\..\OTAPI.Scripts\JavaScript\**\*.js" />
    <Lua Include="$(MSBuildProjectDirectory)\..\OTAPI.Scripts\Lua\**\*.lua" />
    <ClientRefs Include="$(MSBuildProjectDirectory)\csharp\plugins\*.refs" />
    <ClientModules Include="$(MSBuildProjectDirectory)\csharp\plugins\modules\**\*.cs" />
    <ClientCSScripts Include="$(MSBuildProjectDirectory)\csharp\plugins\scripts\**\*.cs" />
    <ClientJavascript Include="$(MSBuildProjectDirectory)\clearscript\**\*.js" />
    <ClientLua Include="$(MSBuildProjectDirectory)\lua\**\*.lua" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="MessageBoxWindow.axaml.cs">
      <DependentUpon>MessageBoxWindow.axaml</DependentUpon>
    </Compile>
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="AfterBuild">
    <Message Text="Copying OTAPI patch files" Importance="high" />
    <MakeDir Directories="$(TargetDir)modifications/" />
    <RemoveDir Directories="$(TargetDir)modifications/" />
    <MakeDir Directories="$(TargetDir)modifications/" />
    <Copy SourceFiles="$(TargetDir)ModFramework.Modules.CSharp.dll" DestinationFolder="$(TargetDir)modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(TargetDir)ModFramework.Modules.ClearScript.dll" DestinationFolder="$(TargetDir)modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(TargetDir)ModFramework.Modules.Lua.dll" DestinationFolder="$(TargetDir)modifications" SkipUnchangedFiles="false" />
    <!-- <Copy SourceFiles="$(TargetDir)ModFramework.Modules.CSharp.dll" DestinationFolder="$(TargetDir)client/modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(TargetDir)ModFramework.Modules.ClearScript.dll" DestinationFolder="$(TargetDir)client/modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(TargetDir)ModFramework.Modules.Lua.dll" DestinationFolder="$(TargetDir)client/modifications" SkipUnchangedFiles="false" /> -->

    <MakeDir Directories="$(TargetDir)patchtime/" />
    <RemoveDir Directories="$(TargetDir)patchtime/" />
    <MakeDir Directories="$(TargetDir)patchtime/" />

    <MakeDir Directories="$(TargetDir)client/csharp/" />
    <RemoveDir Directories="$(TargetDir)client/csharp/" />
    <MakeDir Directories="$(TargetDir)client/csharp/" />

    <MakeDir Directories="$(TargetDir)patchtime/csharp/" />
    <Copy SourceFiles="@(Refs)" DestinationFolder="$(TargetDir)patchtime/csharp/plugins/" />
    <Copy SourceFiles="@(Patches)" DestinationFolder="$(TargetDir)patchtime/csharp/plugins/patches/otapi/%(RecursiveDir)" />
    <Copy SourceFiles="@(TopLevelScripts)" DestinationFolder="$(TargetDir)patchtime/csharp/plugins/toplevel/otapi/%(RecursiveDir)" />
    <Copy SourceFiles="@(Shims)" DestinationFolder="$(TargetDir)patchtime/csharp/plugins/shims/%(RecursiveDir)" />
    <Copy SourceFiles="@(Modules)" DestinationFolder="$(TargetDir)patchtime/csharp/plugins/modules-patched/%(RecursiveDir)" />

    <MakeDir Directories="$(TargetDir)client/csharp/" />
    <Copy SourceFiles="@(ClientModules)" DestinationFolder="$(TargetDir)client/csharp/plugins/modules/%(RecursiveDir)" />
    <Copy SourceFiles="@(ClientRefs)" DestinationFolder="$(TargetDir)client/csharp/plugins/" />
    <Copy SourceFiles="@(ClientCSScripts)" DestinationFolder="$(TargetDir)client/csharp/plugins/scripts/%(RecursiveDir)" />

    <MakeDir Directories="$(TargetDir)client/clearscript/" />
    <RemoveDir Directories="$(TargetDir)client/clearscript/" />
    <MakeDir Directories="$(TargetDir)client/clearscript/" />
    <Copy SourceFiles="@(JavaScript)" DestinationFolder="$(TargetDir)client/clearscript/%(RecursiveDir)" />
    <Copy SourceFiles="@(ClientJavascript)" DestinationFolder="$(TargetDir)client/clearscript/%(RecursiveDir)" />

    <MakeDir Directories="$(TargetDir)client/lua/" />
    <RemoveDir Directories="$(TargetDir)client/lua/" />
    <MakeDir Directories="$(TargetDir)client/lua/" />
    <Copy SourceFiles="@(Lua)" DestinationFolder="$(TargetDir)client/lua/%(RecursiveDir)" />
    <Copy SourceFiles="@(ClientLua)" DestinationFolder="$(TargetDir)client/lua/%(RecursiveDir)" />
    
    <Copy SourceFiles="$(PkgMicrosoft_Win32_Registry)/lib/netstandard2.0/Microsoft.Win32.Registry.dll" DestinationFolder="$(TargetDir)" SkipUnchangedFiles="false" />
  </Target>
  <Target Name="AfterPrepareForPublish" AfterTargets="Publish">
    <Message Text="Copying release OTAPI patch files" Importance="high" />
    <MakeDir Directories="$(PublishDir)modifications" />
    <RemoveDir Directories="$(PublishDir)modifications" />
    <MakeDir Directories="$(PublishDir)modifications" />
    <!-- <Copy SourceFiles="$(PublishDir)ModFramework.Modules.CSharp.dll" DestinationFolder="$(PublishDir)modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(PublishDir)ModFramework.Modules.ClearScript.dll" DestinationFolder="$(PublishDir)modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(PublishDir)ModFramework.Modules.Lua.dll" DestinationFolder="$(PublishDir)modifications" SkipUnchangedFiles="false" /> -->
    <Copy SourceFiles="$(PkgModFramework_Modules_CSharp)/lib/net6.0/ModFramework.Modules.CSharp.dll" DestinationFolder="$(PublishDir)modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(PkgModFramework_Modules_ClearScript)/lib/net6.0/ModFramework.Modules.ClearScript.dll" DestinationFolder="$(PublishDir)modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(PkgModFramework_Modules_Lua)/lib/net6.0/ModFramework.Modules.Lua.dll" DestinationFolder="$(PublishDir)modifications" SkipUnchangedFiles="false" />
    <!-- <Copy SourceFiles="$(PkgModFramework_Modules_CSharp)/lib/net6.0/ModFramework.Modules.CSharp.dll" DestinationFolder="$(PublishDir)client/modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(PkgModFramework_Modules_ClearScript)/lib/net6.0/ModFramework.Modules.ClearScript.dll" DestinationFolder="$(PublishDir)client/modifications" SkipUnchangedFiles="false" />
    <Copy SourceFiles="$(PkgModFramework_Modules_Lua)/lib/net6.0/ModFramework.Modules.Lua.dll" DestinationFolder="$(PublishDir)client/modifications" SkipUnchangedFiles="false" /> -->


    <MakeDir Directories="$(PublishDir)patchtime/" />
    <RemoveDir Directories="$(PublishDir)patchtime/" />
    <MakeDir Directories="$(PublishDir)patchtime/" />

    <MakeDir Directories="$(PublishDir)client/csharp" />
    <RemoveDir Directories="$(PublishDir)client/csharp" />
    <MakeDir Directories="$(PublishDir)client/csharp" />

    <MakeDir Directories="$(PublishDir)patchtime/csharp/" />
    <Copy SourceFiles="@(Refs)" DestinationFolder="$(PublishDir)patchtime/csharp/plugins/" />
    <Copy SourceFiles="@(Patches)" DestinationFolder="$(PublishDir)patchtime/csharp/plugins/patches/otapi/%(RecursiveDir)" />
    <Copy SourceFiles="@(TopLevelScripts)" DestinationFolder="$(PublishDir)patchtime/csharp/plugins/toplevel/otapi/%(RecursiveDir)" />
    <Copy SourceFiles="@(Shims)" DestinationFolder="$(PublishDir)patchtime/csharp/plugins/shims/%(RecursiveDir)" />
    <Copy SourceFiles="@(Modules)" DestinationFolder="$(PublishDir)patchtime/csharp/plugins/modules-patched/%(RecursiveDir)" />

    <MakeDir Directories="$(PublishDir)client/csharp/" />
    <Copy SourceFiles="@(ClientModules)" DestinationFolder="$(PublishDir)client/csharp/plugins/modules/%(RecursiveDir)" />
    <Copy SourceFiles="@(ClientRefs)" DestinationFolder="$(PublishDir)client/csharp/plugins/" />
    <Copy SourceFiles="@(ClientCSScripts)" DestinationFolder="$(PublishDir)client/csharp/plugins/scripts/%(RecursiveDir)" />

    <MakeDir Directories="$(PublishDir)client/clearscript/" />
    <RemoveDir Directories="$(PublishDir)client/clearscript/" />
    <MakeDir Directories="$(PublishDir)client/clearscript/" />
    <Copy SourceFiles="@(JavaScript)" DestinationFolder="$(PublishDir)client/clearscript/%(RecursiveDir)" />
    <Copy SourceFiles="@(ClientJavascript)" DestinationFolder="$(PublishDir)client/clearscript/%(RecursiveDir)" />

    <MakeDir Directories="$(PublishDir)client/lua/" />
    <RemoveDir Directories="$(PublishDir)client/lua/" />
    <MakeDir Directories="$(PublishDir)client/lua/" />
    <Copy SourceFiles="@(Lua)" DestinationFolder="$(PublishDir)client/lua/%(RecursiveDir)" />
    <Copy SourceFiles="@(ClientLua)" DestinationFolder="$(PublishDir)client/lua/%(RecursiveDir)" />
  </Target>

	<Import Condition="Exists('../OTAPI.Patcher/bin/Debug/net6.0/AutoGenerated.target')" Project="../OTAPI.Patcher/bin/Debug/net6.0/AutoGenerated.target" />
	<Import Condition="Exists('./bin/x64/Debug/net6.0/AutoGenerated.target')" Project="./bin/x64/Debug/net6.0/AutoGenerated.target" />
  
  <Target Name="MoveBin" AfterTargets="Publish">
		<ItemGroup>
			<MoveBinaries Include="$(PublishDir)*" Exclude="$(PublishDir)OTAPI.Client.Launcher.exe;$(PublishDir)client/*" />
		</ItemGroup>
		<Move SourceFiles="@(MoveBinaries)" DestinationFolder="$(PublishDir)bin" ContinueOnError="true" />
    <RemoveDir Directories="$(PublishDir)CefGlueBrowserProcess;$(PublishDir)cs;$(PublishDir)de;$(PublishDir)es;$(PublishDir)fr;$(PublishDir)it;$(PublishDir)ja;$(PublishDir)ko;$(PublishDir)locales;$(PublishDir)pl;$(PublishDir)pt-BR;$(PublishDir)ru;$(PublishDir)swiftshader;$(PublishDir)tr;$(PublishDir)zh-Hans;$(PublishDir)zh-Hant" />
	</Target>

	<UsingTask TaskName="PatchAppHost" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)/Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<HostExe ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Code Type="Fragment" Language="cs">
				/*
				This is a patch to allow self contained apps to run from the root while having the modules in a ./bin folder.
				https://github.com/dotnet/sdk/issues/10366

				The script replaces the ./OTAPI.Client.Launcher.dll with ./bin/OTAPI.Client.Launcher.dll
				alternates: dnSpy(does this method), NetCoreBeauty
				*/
				var find = Encoding.UTF8.GetBytes("OTAPI.Client.Launcher.dll\0");
				var replace = Encoding.UTF8.GetBytes("bin" + Path.DirectorySeparatorChar + "OTAPI.Client.Launcher.dll\0");
				var contents = File.ReadAllBytes(HostExe);

				var matches = 0;
				var offset = Array.FindIndex(contents, (b) =&gt; {
				matches = (b == find[matches]) ? matches + 1 : 0;
				return matches == find.Length;
				});
				if (offset &gt; -1) offset -= find.Length - 1;

				var x = 0;
				Array.ForEach(replace, _ =&gt; { contents[offset + x] = replace[x++]; });

				File.WriteAllBytes(HostExe, contents);
			</Code>
		</Task>
	</UsingTask>

	<Target Name="PatchAppHostAfterPublish" AfterTargets="Publish" Condition="'$(RuntimeIdentifier)' == 'win-x64'">
		<PatchAppHost HostExe="$(PublishDir)OTAPI.Client.Launcher.exe" />
		<Message Text="Patched OTAPI.Client.Launcher.exe host for ./bin redirect" Importance="High" />
	</Target>
</Project>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OTAPI.Core</name>
    </assembly>
    <members>
        <member name="T:OTAPI.Core.IEntity">
            <summary>
            IEntity is designed to be the base of all entities in the application.
            Said examples of these entities may be:
                Command line sender
                TerrariaEntity (which is Projectiles, Players, Npcs etc) 
                External assembly's implementation
            defined in an external assembly.
            </summary>
        </member>
        <member name="T:OTAPI.Core.TerrariaEntity">
            <summary>
            TerrariaEntity is intended to be the inclusive base of all vanilla terraria entities, so will be used instead of the
            patcher injecting IEntity.
            </summary>
            <remarks>
            Developers: We must ensure we don't introduce new requirements that conflict with:
                Terraria.Player
                Terraria.NPC
                Terraria.Projectile
            </remarks>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Item.NetDefaultsBegin(Terraria.Item,System.Int32@)">
            <summary>
            This method is injected into the start of the NetDefaults method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Item.NetDefaultsEnd(Terraria.Item,System.Int32@)">
            <summary>
            This method is injected into the end of the NetDefaults method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Item.SetDefaultsByNameBegin(Terraria.Item,System.String@)">
            <summary>
            This method is injected into the start of the SetDefaults(string) method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Item.SetDefaultsByNameEnd(Terraria.Item,System.String@)">
            <summary>
            This method is injected into the end of the SetDefaults(string) method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Item.SetDefaultsByIdBegin(Terraria.Item,System.Int32@,System.Boolean@)">
            <summary>
            This method is injected into the start of the SetDefaults(int,bool) method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Item.SetDefaultsByIdEnd(Terraria.Item,System.Int32@,System.Boolean@)">
            <summary>
            This method is injected into the end of the SetDefaults(int,bool) method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Main.Christmas">
            <summary>
            This method is ran right before the call to checkXMas to allow
            cancelling of the function.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Main.startDedInput">
            <summary>
            This method is injected into the start of the startDedInput method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Main.InitializeBegin">
            <summary>
            This method is injected to the beginning of the terraria Initialize method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Main.InitializeEnd">
            <summary>
            This method is injected into the end of the terraria Initialize method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Main.UpdateBegin(Microsoft.Xna.Framework.GameTime@)">
            <summary>
            This method is injected to the beginning of the terraria Update method.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Main.UpdateEnd(Microsoft.Xna.Framework.GameTime@)">
            <summary>
            This method is injected into the end of the terraria Update method.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Main.Halloween">
            <summary>
            This method is ran right before the call to checkHalloween to allow
            cancelling of the function.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.MessageBuffer.NameCollision(Terraria.Player)">
            <summary>
            This method is injected on the if block that surrounds the player name
            collision kick.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.NetMessage.GreetPlayerBegin(System.Int32@)">
            <summary>
            This method is called immediately before any code of the greetPlayer method executes.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.NetMessage.GreetPlayerEnd(System.Int32)">
            <summary>
            This method is called after the vanilla greetPlayer method finishes.
            </summary>
            <param name="playerId"></param>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.NetMessage.SendBytes(System.Int32,System.Byte[],System.Int32,System.Int32,Terraria.Net.Sockets.SocketSendCallback,System.Object)">
            <summary>
            This method replaces most calls to AsyncSend in the SendData method
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Netplay.ServerSocketCreate">
            <summary>
            This method replaces the "new TcpSocket" call in server loop, allowing
            custom server socket implementations.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.BossBagItem(Terraria.NPC,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            This method injected into the DropBossBags call, replacing the server NewItem calls.
            We check the result for -1 to cancel the function.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.Create(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Single@,System.Single@,System.Single@,System.Single@,System.Int32@)">
            <summary>
            This method is injected into the StrikeNPC method along with an additional variable [cancelResult] which is returned
            if this method returns false.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.NetDefaultsBegin(Terraria.NPC,System.Int32@)">
            <summary>
            This method is injected into the start of the NetDefaults method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.NetDefaultsEnd(Terraria.NPC,System.Int32@)">
            <summary>
            This method is injected into the end of the NetDefaults method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.SetDefaultsByNameBegin(Terraria.NPC,System.String@)">
            <summary>
            This method is injected into the start of the SetDefaults(string) method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.SetDefaultsByNameEnd(Terraria.NPC,System.String@)">
            <summary>
            This method is injected into the end of the SetDefaults(string) method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.SetDefaultsByIdBegin(Terraria.NPC,System.Int32@,System.Single@)">
            <summary>
            This method is injected into the start of the SetDefaults(int,float) method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.SetDefaultsByIdEnd(Terraria.NPC,System.Int32@,System.Single@)">
            <summary>
            This method is injected into the end of the SetDefaults(int,float) method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Npc.Strike(Terraria.NPC,System.Int32@,System.Int32@,System.Single@,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            This method is injected into the StrikeNPC method along with an additional variable [cancelResult] which is returned
            if this method returns false.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Projectile.AIBegin(Terraria.Projectile)">
            <summary>
            This method is injected into the start of the AI() method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Projectile.AIEnd(Terraria.Projectile)">
            <summary>
            This method is injected into the end of the AI() method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Projectile.SetDefaultsByIdBegin(Terraria.Projectile,System.Int32@)">
            <summary>
            This method is injected into the start of the SetDefaults(int) method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Projectile.SetDefaultsByIdEnd(Terraria.Projectile,System.Int32)">
            <summary>
            This method is injected into the end of the SetDefaults(int) method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Projectile.UpdateBegin(Terraria.Projectile,System.Int32@)">
            <summary>
            This method is injected into the start of the Update(int) method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.Projectile.UpdateEnd(Terraria.Projectile,System.Int32)">
            <summary>
            This method is injected into the end of the Update(int) method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.World.MechSpawn(System.Single,System.Single,System.Int32,System.Int32@,System.Int32@,System.Int32@,OTAPI.Core.StatueType)">
            <summary>
            This method is injected both the NPC and Item MechSpawn functions
            in order to control the return value.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.WorldFile.SaveWorldBegin(System.Boolean@,System.Boolean@)">
            <summary>
            This method is injected into the start of the saveWorld(bool) method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.WorldFile.SaveWorldEnd(System.Boolean,System.Boolean)">
            <summary>
            This method is injected into the end of the saveWorld(bool) method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.WorldGen.HardmodeBegin">
            <summary>
            This method is injected into the start of the StartHardmode() method.
            The return value will dictate if normal vanilla code should continue to run.
            </summary>
            <returns>True to continue on to vanilla code, otherwise false</returns>
        </member>
        <member name="M:OTAPI.Core.Callbacks.Terraria.WorldGen.HardmodeEnd">
            <summary>
            This method is injected into the end of the StartHardmode() method.
            </summary>
        </member>
        <member name="M:OTAPI.Core.Debug.Assert.Expression(System.Linq.Expressions.Expression{System.Func{System.Boolean}})">
            <summary>
            Asserts the specified LINQ expression for a true condition and throws an assertion 
            failure exception indicating the compiled expression which failed, if the result of 
            the expression is true.
            </summary>
            <param name="assertionExpr">A LINQ-style expression which to evaluate</param>
            <example>
            Use a LINQ-style expression to evaluate an assertion expression.
            
            Assert.Expression(() => objectRef.Property == null);
            </example>
            <remarks>
            This code will only run in debug mode.  Calls to this method are ignored when
            the DEBUG symbol is not defined.
            </remarks>
        </member>
        <member name="T:OTAPI.Core.HookResult">
            <summary>
            Defines a result from a hook to be actioned by OTAPI
            </summary>
        </member>
        <member name="F:OTAPI.Core.HookResult.Continue">
            <summary>
            Typically used to continue on to vanilla code
            </summary>
        </member>
        <member name="F:OTAPI.Core.HookResult.Cancel">
            <summary>
            Typically used to stop executing vanilla code
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Collision.PressurePlate">
            <summary>
            Occurs when an entity triggers a pressure plate.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Command.StartCommandThread">
            <summary>
            Occurs when the server is to start listening for commands.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Game.Christmas">
            <summary>
            Occurs when christmas is being checked for.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Game.PreInitialize">
            <summary>
            Occurs at the first point of call when the Initialze method is ran.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Game.PostInitialize">
            <summary>
            Occurs at the end of the games initialize method.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Game.PreUpdate">
            <summary>
            Occurs at the first point of call when the game is running the update loop.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Game.PostUpdate">
            <summary>
            Occurs at the end of the games update loop.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Game.Halloween">
            <summary>
            Occurs when hallowwn is being checked for.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Item.PreNetDefaults">
            <summary>
            Occurs at the start of the NetDefaults(int) method.
            Arg 1:  The item instance
                2:  Type
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Item.PostNetDefaults">
            <summary>
            Occurs when the NetDefaults(int) method ends
            Arg 1:  The item instance
                2:  Type
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Item.PreSetDefaultsByName">
            <summary>
            Occurs at the start of the SetDefaults(string) method.
            Arg 1:  The item instance
                2:  Item name
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Item.PostSetDefaultsByName">
            <summary>
            Occurs when the SetDefaults(string) method ends
            Arg 1:  The item instance
                2:  Item name
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Item.PreSetDefaultsById">
            <summary>
            Occurs at the start of the SetDefaults(int,bool) method
            Arg 1:  The item instance
                2:  Type
                3:  noMatCheck flag
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Item.PostSetDefaultsById">
            <summary>
            Occurs when the SetDefaults(int,bool) method ends
            Arg 1:  The item instance
                2:  Type
                3:  noMatCheck flag
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OTAPI.Core.Hooks.Net.ReceiveData" -->
        <member name="F:OTAPI.Core.Hooks.Net.SendBytes">
            <summary>
            Occurs when the server is about to send data to a client
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OTAPI.Core.Hooks.Net.SendData" -->
        <member name="F:OTAPI.Core.Hooks.Net.Player.PreGreetPlayer">
            <summary>
            Occurs at the start of the greetPlayer method.
            Arg 1: playerid
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Net.Player.PostGreetPlayer">
            <summary>
            Occurs at the end of the greetPlayer method.
            Arg 1: playerid
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Net.Player.NameCollision">
            <summary>
            Occurs when a connecting player is about to be booted due to having the same name
            as a player whom is already playing.
            Arg 1: player instance
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Net.Socket.ServerSocketCreate">
            <summary>
            Occurs when the server socket is to be created.
            Return null if you wish for default functionality.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Npc.BossBagItem">
            <summary>
            Occurs when a boss item is to drop
            Arg 1:  The npc instance
            TODO: the following arguments are vanilla, these need to be documented.
            </summary>
            <remarks>Currently only supported using the server API</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OTAPI.Core.Hooks.Npc.PreDropLoot" -->
        <!-- Badly formed XML comment ignored for member "F:OTAPI.Core.Hooks.Npc.PostDropLoot" -->
        <member name="F:OTAPI.Core.Hooks.Npc.PreNetDefaults">
            <summary>
            Occurs at the start of the NetDefaults(int) method.
            Arg 1:  The npc instance
                2:  Type
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Npc.PostNetDefaults">
            <summary>
            Occurs when the NetDefaults(int) method ends
            Arg 1:  The npc instance
                2:  Type
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Npc.PreSetDefaultsByName">
            <summary>
            Occurs at the start of the SetDefaults(string) method.
            Arg 1:  The npc instance
                2:  Npc name
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Npc.PostSetDefaultsByName">
            <summary>
            Occurs when the SetDefaults(string) method ends
            Arg 1:  The npc instance
                2:  Npc name
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Npc.PreSetDefaultsById">
            <summary>
            Occurs at the start of the SetDefaults(int,float) method.
            Arg 1:  The npc instance
                2:  type
                3:  scale override
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Npc.PostSetDefaultsById">
            <summary>
            Occurs when the SetDefaults(int,float) method ends
            Arg 1:  The npc instance
                2:  type
                3:  scale override
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Npc.Strike">
            <summary>
            Occurs at the start of the NetDefaults(int) method.
            Arg 1:  The npc instance
                2:  Value to be returned if the hook cancelled the event
                3:  damage
                4:  knock back
                5:  hit direction
                6:  Type
                7:  crit
                8:  no effect
                9:  from net
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Npc.Transform">
            <summary>
            Occurs when an npc transforms
            Arg 1:  The npc instance=
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Projectile.PreAI">
            <summary>
            Occurs at the start of the AI() method.
            Arg 1:  The projectile instance
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Projectile.PostAI">
            <summary>
            Occurs when the AI() method ends
            Arg 1:  The projectile instance
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Projectile.PreSetDefaultsById">
            <summary>
            Occurs at the start of the SetDefaults(int) method.
            Arg 1:  The projectile instance
                2:  Type
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Projectile.PostSetDefaultsById">
            <summary>
            Occurs when the SetDefaults(int) method ends
            Arg 1:  The projectile instance
                2:  Type
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Projectile.PreUpdate">
            <summary>
            Occurs at the start of the Update(int) method.
            Arg 1:  The projectile instance
                2:  The root of whoAmI
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.Projectile.PostUpdate">
            <summary>
            Occurs when the Update(int) method ends
            Arg 1:  The projectile instance
                2:  The root of whoAmI
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.World.PreHardmode">
            <summary>
            Occurs at the start of the StartHardmode() method.
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.World.PostHardmode">
            <summary>
            Occurs when the StartHardmode() method ends
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.World.Statue">
            <summary>
            Occurs when the game is to spawn a statue
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.World.IO.PreSaveWorld">
            <summary>
            Occurs at the start of the saveWorld(bool,bool) method.
            Arg 1:  Flag to save to the "cloud"
                2:  The root of whoAmIFlag to indicate if the time is to be reset
            </summary>
        </member>
        <member name="F:OTAPI.Core.Hooks.World.IO.PostSaveWorld">
            <summary>
            Occurs when the saveWorld(bool,bool) method ends
            Arg 1:  Flag to save to the "cloud"
                2:  The root of whoAmIFlag to indicate if the time is to be reset
            </summary>
        </member>
    </members>
</doc>
